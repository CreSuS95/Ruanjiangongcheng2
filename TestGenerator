package myProject;
import java.util.*;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.*;
public class TestGenerator {
	public static void Generate(int number) throws IOException {
		for(int m=0;m<number;m++) {
		int temp1=-1;
		float max=0;
		String Generate=" ";
		String Generatetemp=" ";
		int i=0;
		int j=0;
		int temp2=-1;
		int temp3=-1;
		float numa []= {0,0,0,0};
		int a[] = {1, 1,1};
		  int b[] = {1, 1,1};
		  int c[] = {2, 1,1};
		  int d[] = {3, 1, 1};
		char operat[]= {' ',' ',' ',' '};
		int num1[]= {1,1,1};
		int num2[]= {1,1,1};
		int num3[]= {1,1,1};
		int num4[]= {1,1,1};
		char str[]=new char[35];
		Random rand1 = new Random();//括号有没有，0表示没有括号，1表示有括号
		temp1=rand1.nextInt(2);
		Random rand2 = new Random();//运算符的数量，<=3
		temp2=rand2.nextInt(3)+1;
	    switch(temp1) {//有没有括号
	    case 0: {
	    	switch(temp2) {//运算符的个数
	    	case 1:{operat[1]=ranOperator.Operator();
	    	num1=ranNum.RanNumber();
	    	num2=ranNum.RanNumber();
	        boolean tap=true;
	    	while(operat[1]=='-'&&tap==true) {
	    		a[0] = num1[0] * num1[2] + num1[1];
	    		  a[1] = num1[2];
	    		  b[0] = num2[0] * num2[2] + num2[1];
	    		  b[1] = num2[2];
	    		  c[0] = a[0] * b[1] - a[1] * b[0];
	    		  c[1] = a[1] * b[1];
	    		  if(c[0]<0) {
	    			  num1=ranNum.RanNumber();
	    		      num2=ranNum.RanNumber();
	    		      tap=true;
	    		  }else {
	    			  tap=false;
	    		  }
	    	}
		     Generate = num1[0]+"'"+num1[1]+"/"+num1[2]+operat[1]+num2[0]+"'"+num2[1]+"/"+num2[2]+"=";
			 System.out.println(Generate);
	    	break;
	    	}
	    	case 2:{
	    		operat[1]=ranOperator.Operator();
	    		operat[2]=ranOperator.Operator();
	    	num1=ranNum.RanNumber();
	    	num2=ranNum.RanNumber();
	    	num3=ranNum.RanNumber();
	        boolean tap=true;
	    	while(operat[1]=='-'&&tap==true&& operat[2] !='-') {
	    		a[0] = num1[0] * num1[2] + num1[1];
	    		  a[1] = num1[2];
	    		  b[0] = num2[0] * num2[2] + num2[1];
	    		  b[1] = num2[2];
	    		  c[0] = a[0] * b[1] - a[1] * b[0];
	    		  c[1] = a[1] * b[1];
	    		  if(c[0]<0) {
	    			  num1=ranNum.RanNumber();
	    		      num2=ranNum.RanNumber();
	    		      tap=true;
	    		  }else {
	    			  tap=false;
	    		  }
	    	}
	    	tap=true;
	    	while(operat[2]=='-'&&tap==true &&operat[1] !='-') {
	    		a[0] = num2[0] * num2[2] + num2[1];
	    		  a[1] = num2[2];
	    		  b[0] = num3[0] * num3[2] + num3[1];
	    		  b[1] = num3[2];
	    		  c[0] = a[0] * b[1] - a[1] * b[0];
	    		  c[1] = a[1] * b[1];
	    		  if(c[0]<0) {
	    			  num2=ranNum.RanNumber();
	    		      num3=ranNum.RanNumber();
	    		      tap=true;
	    		  }else {
	    			  tap=false;
	    		  }
	    	}
	    	tap=true;
	    	while(operat[2]=='-'&&tap==true &&operat[1] =='-') {
	    		while(operat[1]=='-'&&tap==true) {
		    		a[0] = num1[0] * num1[2] + num1[1];
		    		  a[1] = num1[2];
		    		  b[0] = num2[0] * num2[2] + num2[1];
		    		  b[1] = num2[2];
		    		  c[0] = a[0] * b[1] - a[1] * b[0];
		    		  c[1] = a[1] * b[1];
		    		  if(c[0]<0) {
		    			  num1=ranNum.RanNumber();
		    		      num2=ranNum.RanNumber();
		    		      tap=true;
		    		  }else {
		    			  tap=false;
		    		  }
		    	}
	    		num3[0]=(int)(num2[0]/2);
	    		num3[1]=(int)(num2[1]/2);
	    		num3[2]=(int)(num2[2]/2);
	    	}	
	    	Generate = num1[0]+"'"+num1[1]+"/"+num1[2]+operat[1]+num2[0]+"'"+num2[1]+"/"+num2[2]+operat[2]+num3[0]+"'"+num3[1]+"/"+num3[2]+"=";
			System.out.println(Generate);
	    	    break;
	    }
	    	case 3:{
	    		operat[1]=ranOperator.Operator();
	    		operat[2]=ranOperator.Operator();
	    		operat[3]=ranOperator.Operator();
	    	    num1=ranNum.RanNumber();
	    	    num2=ranNum.RanNumber();
	    	    num3=ranNum.RanNumber();
	    	    num4=ranNum.RanNumber();
	    	    boolean tap=true;
	    	   if(operat[1]=='-'&&tap==true) {
	    		 num2[0]=num2[0]/2; 
	    		 num2[1]=num2[1]/2;
	    		 num2[2]=num2[2]/2;
	        }
	    	   if(operat[2]=='-'&&tap==true) {
		    		 num3[0]=num3[0]/3; 
		    		 num3[1]=num3[1]/3;
		    		 num3[2]=num3[2]/3;
		    }
	    	   if(operat[3]=='-'&&tap==true) {
		    		 num4[0]=num4[0]/4; 
		    		 num4[1]=num4[1]/4;
		    		 num4[2]=num4[2]/4;
		      }
	    	   Generate = num1[0]+"'"+num1[1]+"/"+num1[2]+operat[1]+num2[0]+"'"+num2[1]+"/"+num2[2]+operat[2]+num3[0]+"'"+num3[1]+"/"+num3[2]+operat[3]+num4[0]+"'"+num4[1]+"/"+num4[2]+"=";
				System.out.println(Generate);
	    	   break;
	    	}	    
	    	
	    	}
	    }
	    case 1:{
	    	switch(temp2) {//运算符的个数
	    	case 1:
	     	{
	     	operat[1]=ranOperator.Operator();
	    	num1=ranNum.RanNumber();
	    	num2=ranNum.RanNumber();
	        boolean tap=true;
	    	while(operat[1]=='-'&&tap==true) {
	    		a[0] = num1[0] * num1[2] + num1[1];
	    		  a[1] = num1[2];
	    		  b[0] = num2[0] * num2[2] + num2[1];
	    		  b[1] = num2[2];
	    		  c[0] = a[0] * b[1] - a[1] * b[0];
	    		  c[1] = a[1] * b[1];
	    		  if(c[0]<0) {
	    			  num1=ranNum.RanNumber();
	    		      num2=ranNum.RanNumber();
	    		      tap=true;
	    		  }else {
	    			  tap=false;
	    		  }
	    	}
	    	Generate = num1[0]+"'"+num1[1]+"/"+num1[2]+operat[1]+num2[0]+"'"+num2[1]+"/"+num2[2]+"=";
			System.out.println(Generate);
	    	break;
	    	}
	    		
	    		
	    		
	    	case 2:{
	    		   temp3=rand1.nextInt(2)+1;//结果是1，表示括号在第一个运算符，2，在第二个运算符
	    	       if(temp3==1)
	    	       {
	    	    	   str[0]='(';
	    	           str[16]=')';
	    	       }
	    	       else {
	    	    	   str[9]='(';
	    	           str[25]=')';
	    	       }
	    	       {
	   	    		operat[1]=ranOperator.Operator();
	   	    		operat[2]=ranOperator.Operator();
	   	    	num1=ranNum.RanNumber();
	   	    	num2=ranNum.RanNumber();
	   	    	num3=ranNum.RanNumber();
	   	        boolean tap=true;
	   	    	while(operat[1]=='-'&&tap==true&& operat[2] !='-') {
	   	    		a[0] = num1[0] * num1[2] + num1[1];
	   	    		  a[1] = num1[2];
	   	    		  b[0] = num2[0] * num2[2] + num2[1];
	   	    		  b[1] = num2[2];
	   	    		  c[0] = a[0] * b[1] - a[1] * b[0];
	   	    		  c[1] = a[1] * b[1];
	   	    		  if(c[0]<0) {
	   	    			  num1=ranNum.RanNumber();
	   	    		      num2=ranNum.RanNumber();
	   	    		      tap=true;
	   	    		  }else {
	   	    			  tap=false;
	   	    		  }
	   	    	}
	   	    	tap=true;
	   	    	while(operat[2]=='-'&&tap==true &&operat[1] !='-') {
	   	    		a[0] = num2[0] * num2[2] + num2[1];
	   	    		  a[1] = num2[2];
	   	    		  b[0] = num3[0] * num3[2] + num3[1];
	   	    		  b[1] = num3[2];
	   	    		  c[0] = a[0] * b[1] - a[1] * b[0];
	   	    		  c[1] = a[1] * b[1];
	   	    		  if(c[0]<0) {
	   	    			  num2=ranNum.RanNumber();
	   	    		      num3=ranNum.RanNumber();
	   	    		      tap=true;
	   	    		  }else {
	   	    			  tap=false;
	   	    		  }
	   	    	}
	   	    	tap=true;
	   	    	while(operat[2]=='-'&&tap==true &&operat[1] =='-') {
	   	    		while(operat[1]=='-'&&tap==true) {
	   		    		a[0] = num1[0] * num1[2] + num1[1];
	   		    		  a[1] = num1[2];
	   		    		  b[0] = num2[0] * num2[2] + num2[1];
	   		    		  b[1] = num2[2];
	   		    		  c[0] = a[0] * b[1] - a[1] * b[0];
	   		    		  c[1] = a[1] * b[1];
	   		    		  if(c[0]<0) {
	   		    			  num1=ranNum.RanNumber();
	   		    		      num2=ranNum.RanNumber();
	   		    		      tap=true;
	   		    		  }else {
	   		    			  tap=false;
	   		    		  }
	   		    	}
	   	    		num3[0]=(int)(num2[0]/2);
	   	    		num3[1]=(int)(num2[1]/2);
	   	    		num3[2]=(int)(num2[2]/2);
	   	    		
	    	      
	    	      }
	    	   }    
	    	       if(temp3==1)
	    	       {
	    	    	Generate = "("+num1[0]+"'"+num1[1]+"/"+num1[2]+operat[1]+num2[0]+"'"+num2[1]+"/"+num2[2]+")"+operat[2]+num3[0]+"'"+num3[1]+"/"+num3[2]+"=";
	   				System.out.println(Generate);
	    	       }
	    	       else {
	    	    	   Generate = num1[0]+"'"+num1[1]+"/"+num1[2]+operat[1]+"("+num2[0]+"'"+num2[1]+"/"+num2[2]+operat[2]+num3[0]+"'"+num3[1]+"/"+num3[2]+")"+"=";
	   				   System.out.println(Generate);
	    	       }
	    	       break;
	    	}
	    	case 3:  {
	    		   temp3=rand1.nextInt(3)+1;//结果是1，表示括号在第一个运算符，2，在第二个运算符,依次类推
	    	       if(temp3==1)
	    	       {
	    	    	   str[0]='(';
	    	           str[16]=')';
	    	       }
	    	       else if(temp3==2){
	    	    	   str[9]='(';
	    	           str[25]=')';
	    	       }else if(temp3==3) {
	    	    	   str[18]='(';
	    	           str[34]=')';
	    	       }
	    	       {
	   	    		operat[1]=ranOperator.Operator();
	   	    		operat[2]=ranOperator.Operator();
	   	    		operat[3]=ranOperator.Operator();
	   	    	    num1=ranNum.RanNumber();
	   	    	    num2=ranNum.RanNumber();
	   	    	    num3=ranNum.RanNumber();
	   	    	    num4=ranNum.RanNumber();
	   	    	    boolean tap=true;
	   	    	   if(operat[1]=='-'&&tap==true) {
	   	    		 num2[0]=num2[0]/2; 
	   	    		 num2[1]=num2[1]/2;
	   	    		 num2[2]=num2[2]/2;
	   	        }
	   	    	   if(operat[2]=='-'&&tap==true) {
	   		    		 num3[0]=num3[0]/3; 
	   		    		 num3[1]=num3[1]/3;
	   		    		 num3[2]=num3[2]/3;
	   		    }
	   	    	   if(operat[3]=='-'&&tap==true) {
	   		    		 num4[0]=num4[0]/4; 
	   		    		 num4[1]=num4[1]/4;
	   		    		 num4[2]=num4[2]/4;
	   		      }
	    	    }
	    	       
	    	       if(temp3==1)
	    	       {
	    	    	Generate = "("+num1[0]+"'"+num1[1]+"/"+num1[2]+operat[1]+num2[0]+"'"+num2[1]+"/"+num2[2]+")"+operat[2]+num3[0]+"'"+num3[1]+"/"+num3[2]+operat[3]+num4[0]+"'"+num4[1]+"/"+num4[2]+"=";
	   				System.out.println(Generate);
	    	       }
	    	       else if(temp3==2){
	    	    	   Generate = num1[0]+"'"+num1[1]+"/"+num1[2]+operat[1]+"("+num2[0]+"'"+num2[1]+"/"+num2[2]+operat[2]+num3[0]+"'"+num3[1]+"/"+num3[2]+")"+operat[3]+num4[0]+"'"+num4[1]+"/"+num4[2]+"=";
	   				   System.out.println(Generate);
	    	       }
	    	       else if(temp3==3){
	    	    	   Generate = num1[0]+"'"+num1[1]+"/"+num1[2]+operat[1]+num2[0]+"'"+num2[1]+"/"+num2[2]+operat[2]+"("+num3[0]+"'"+num2[1]+"/"+num2[2]+operat[3]+num4[0]+"'"+num4[1]+"/"+num4[2]+")"+"=";
	   				   System.out.println(Generate);
	    	       }
	    	       
	    	     break;
	    	}
	    	
	    	
	    	}
	    }
	    }
	    String path = "C:\\Users\\14305\\source";
	    String filename = "question.txt";
	    File myFile = new File(path,filename);
	    
	   /* BufferedReader reader = new BufferedReader(new FileReader(myFile));
	    String tempString = null;  
	    //int line = 1;  
	    // 一次读入一行，直到读入null为文件结束  
	    while ((tempString = reader.readLine()) != null) {  
	        // 显示行号  
	        System.out.println(tempString);  
	        //line++;  
	    }  
	    reader.close();  
	    */
	    BufferedWriter bw = new BufferedWriter(new FileWriter(myFile,true));
	    bw.write(Generate);  
	    bw.write('\n');  
	    bw.flush();  
	    bw.close(); 
		}//for循环，number的结束括号
	}
		public static void main(String[] args) throws IOException { 
		  int nume1[] = {1, 2, 3};
		  int nume2[] = {3, 2, 4};
		  int nume3[] = {1, 1, 1};
		  TestGenerator.Generate(10);
		 
	}
}
